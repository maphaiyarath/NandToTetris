class Square
{
    field int x, y, size, spdY, gravity;
    field boolean onGround;

    constructor Square new (int xPos, int yPos, int squareSize)
    {
        let x = xPos;
        let y = yPos;
        let size = squareSize;
        let spdY = 0;
        let gravity = 1/2;
        let onGround = true;

        do draw();

        return this;
    }

    method void dispose()
    {
        do Memory.deAlloc (this);
        
        return;
    }

    method int getX()
    {
        return x;
    }

    // range of x on same y for bottom of square

    method int getY()
    {
        return y;
    }

    method void draw()
    {
        do Screen.setColor (true);
        do Screen.drawRectangle (x, y, x + size, y + size);
        
        return;
    }

    method void erase()
    {
        do Screen.setColor (false);
        do Screen.drawRectangle (x, y, x + size, y + size);
        
        return;
    }

    method void jump()
    {
        if (y > 85) // & ((y + size) < 229))
        {
            /*
            let spdY = -10;

            if (spdY < -5)
            {
                let spdY = -5;
            }
            */

            do Screen.setColor (false);
            do Screen.drawRectangle (x, (y + size) - 1, x + size, y + size);

            let y = y - 1;

            // let spdY = spdY + gravity;
            // let y = y + spdY;

            do Screen.setColor (true);
            do Screen.drawRectangle(x, y, x + size, y + 1);
            // having trouble with y...
        }
        
        /*
        else
        {
            let y = 179;
            let spdY = 0;
        }
        */

        // opposite to go down

        return;
    }
}

/*
function startJump {
    if (~onGround) {
        spdY = -2;
        onGround = true; } }
function endJump {
    if (spdY < -6)
        { spdY = -8; } }
*/

// when jump is called,
// should start moving up screen
// when it reaches a certain point,
// it should fall back down to ground