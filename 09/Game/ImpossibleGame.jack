class ImpossibleGame
{
    field Spike spike;
    field Square square;
    field int direction;
    field boolean gameOver;
    field int state;
    field int start;

    /*
        var int play;
        let play = 1;
        var int pause;
        let pause = 2;
        var int continue;
        let continue = 3;
        var int over;
        let over = 4;
        var int restart;
        let restart = 5;
        let start = 0;
        let state = start;
    */

    constructor ImpossibleGame new()
    {
        let spike = Spike.new (402, 229);
        let square = Square.new (80, 178, 50);
        let direction = 0;
        let gameOver = false;
        let start = 0;
        let state = start;
        
        return this;
    }

    method void dispose()
    {
        do spike.dispose();
        do square.dispose();
        do Memory.deAlloc (this);
        return;
    }

    method void begin()
    {
        var char key;
        do Screen.clearScreen();
        do Output.moveCursor (0, 0);
        do Output.printString ("The Impossible Game");
        do Output.println();
        do Output.printString ("Press the right arrow to start!");
        do Screen.drawLine (25, 230, 487, 230); // ground

        while (key = 0)
        {
            let key = Keyboard.keyPressed();
            do square.draw();
        }

        if (key = 132)
        {
            do run();
        }

        while (~(key = 0))
        {
            let key = Keyboard.keyPressed();
        }
        
        return;
    }

    method void run()
    {
        var char key;
        var boolean exit;
        let exit = false;
        do Screen.clearScreen();

        while ((~exit) & (~gameOver))
        {
            while (key = 0)
            {
                let key = Keyboard.keyPressed();
                do moveSpike();
                do moveSquare();
                do square.draw();
                do Screen.drawLine (25, 230, 487, 230); // ground

                //do Output.moveCursor (100, 100);
                //do Output.printString (square.getX());
            }

            if (key = 81)
            {
                let exit = true;
            }

            if (key = 131)
            {
                let direction = 1;
            }

            while (~(key = 0))
            {
                let key = Keyboard.keyPressed();
            }
        }

        if (gameOver)
        {
            do Screen.clearScreen();
            do Output.moveCursor (0, 0);
            do Output.printString ("Try again...");
        }
        return;
    }

    method void collision (Square sq, Spike sp)
    {
        // if bottom or right of square touches anywhere on spike => gameOver

        if ((sq.getX() = sp.getX()) & (sq.getY() = sp.getY()))
        {
            let gameOver = true;
        }
        return;
    }

    method void moveSquare()
    {
        do collision (square, spike);

        if (direction = 1)
        {
            do square.jump();
        }
        do square.move();

        do Sys.wait(5);
        return;
    }

    method void moveSpike()
    {
        do spike.moveLeft();
        return;
    }
}